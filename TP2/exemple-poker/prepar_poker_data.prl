#!/usr/bin/perl -w

# Author: Vincent Claveau
# Contact: vincent.claveau@irisa.fr
# Last modif date: 22 January 2008

# Purpose: sert a preparer les donnees poker pour Aleph

# Comment: 

# Code :


###################################################################
##                          INITIALISATIONS                      ##
###################################################################

use strict;
use locale;
binmode(STDOUT,':utf8'); # si le terminal est en utf8
binmode(STDERR,':utf8'); # si le terminal est en utf8

my $unique = $$;
my $prg = $0;
if($0 =~ /.+\/([^\/]+\.[^\.\/]+)$/) {
	$prg = $1;
}

my $verbose = 2;



##################################################################
# FICHIERS

my $file_in;

my $prefix = "toto";

##########################################################################
# FLAG


##########################################################################
# VARIABLES DIVERSES

# A CHANGER SELON VOTRE SITUATION

my $entete = "entete.pl";
my $aleph = "../aleph.pl";

##########################################################################
# USAGE

my $usage = "Usage : $prg 
Mandatory
argument
*\t -out        <prefixe des fichiers de sortie>
*\t -in         <fichier de donnees a transformer>

 \t -h         : aide
\n";


die $usage unless ($#ARGV > 2);

while($#ARGV > -1 and $ARGV[0] =~ /^-/) {
	$_ = shift;
	if(/^-out/) {
		$prefix = shift;
	} elsif(/^-in/) {
		$file_in = shift;
	} elsif(/^-?-he/) {
		die $usage;
	} else {
		die "unknown option $_!\n $usage\n";
	}
}


##################################################################################
##################################################################################
##                                                                              ##
##                                   BODY                                       ##
##                                                                              ##
##################################################################################
##################################################################################

open(BK,"> $prefix.b") or die "$prg unable to write $prefix.b $!\n";
print BK ":- ['$entete'].\n\n";

open(IN,$file_in) or die "$prg unable to read $file_in $!\n";
open(POS,"> $prefix.f") or die "$prg unable to write $prefix.f $!\n";
open(NEG,"> $prefix.n") or die "$prg unable to write $prefix.n $!\n";
my $nb_ex = 0;
my $ident = '';
while(<IN>) {
	if(/^([1-4]),([0-9]+),([1-4]),([0-9]+),([1-4]),([0-9]+),([1-4]),([0-9]+),([1-4]),([0-9]+),([0-9])/) {
			my @couleurs = (Trans_couleur($1), Trans_couleur($3), Trans_couleur($5), Trans_couleur($7), Trans_couleur($9));
			my @valeurs = (Trans_valeur($2), Trans_valeur($4), Trans_valeur($6), Trans_valeur($8), Trans_valeur($10));
			my $figure = Trans_main($11);

			$nb_ex++;
			$ident = 'main'.$nb_ex;
			my $bool_desc;
			my $carteIdent;

			# ici completer en inscrivant les exemples (pos et neg) dans les fichiers POS et NEG
			# et leur description dans le BK,

			if($figure eq 'carre') {
				print POS "carre($ident).\n";
				$bool_desc = 1;
			} elsif($figure eq 'rien' and int rand 1000 == 0) {
				print NEG "carre($ident).\n";
				$bool_desc = 1;
			} elsif($figure ne 'rien' and int rand 50 == 0) {
				print NEG "carre($ident).\n";
				$bool_desc = 1;
			}

			if($bool_desc) {
				foreach my $i (0..4) {
					$carteIdent = "carte_${nb_ex}_$i";
					print BK "a_carte($ident, $carteIdent).\n";
					print BK "valeur($carteIdent, $valeurs[$i]).\n";
					print BK "couleur($carteIdent, $couleurs[$i]).\n";
				}
			}
	} else {
		print STDERR "$prg: pb ligne au format inconnu :\n$_\n\n";
	}
}
close IN;
close POS;
print NEG "\n";
close NEG;
close BK;


# un fichier pour tout lancer sans s'embeter a tout taper
# il n'y aura plus qu'a faire yap -l xxxx.start
# et taper 'induce.' ou 'sat(1), reduce.' a l'invite de yap
open(START,"> $prefix.start") or die "$prg unable to write $prefix.start $!\n";
print START ":- ['$aleph'].\n";
print START ":- read_all($prefix).\n";
print START ":- set(recordfile,'$prefix.res').\n";
print START ":- set(verbose,0).\n";
close START;





##################################################################################
##################################################################################
##                                                                              ##
##                              PROCEDURES                                      ##
##                                                                              ##
##################################################################################
##################################################################################
sub Trans_valeur {
  my $valeur = shift;

  if ($valeur == 1)      { $valeur = "as"}
  elsif ($valeur == 2)   { $valeur = "deux"}
  elsif ($valeur == 3)   { $valeur = "trois"}
  elsif ($valeur == 4)   { $valeur = "quatre"}
  elsif ($valeur == 5)   { $valeur = "cinq"}
  elsif ($valeur == 6)   { $valeur = "six"}
  elsif ($valeur == 7)   { $valeur = "sept"}
  elsif ($valeur == 8)   { $valeur = "huit"}
  elsif ($valeur == 9)   { $valeur = "neuf"}
  elsif ($valeur == 10)  { $valeur = "dix"}
  elsif ($valeur == 11)  { $valeur = "valet"}
  elsif ($valeur == 12)  { $valeur = "dame"}
  elsif ($valeur == 13)  { $valeur = "roi"}

  return $valeur;
}


sub Trans_couleur {
  # peu importe l'ordre en fait
  my $valeur = shift;

  if ($valeur == 1)      { $valeur = "coeur"}
  elsif ($valeur == 2)   { $valeur = "pique"}
  elsif ($valeur == 3)   { $valeur = "carreau"}
  elsif ($valeur == 4)   { $valeur = "trefle"}

  return $valeur;
}


sub Trans_main {
  my $main = shift;

  if ($main == 0)      { $main = "rien" }
  elsif ($main == 1)   { $main = "paire" }
  elsif ($main == 2)   { $main = "double_paire" }
  elsif ($main == 3)   { $main = "brelan" }
  elsif ($main == 4)   { $main = "suite" }
  elsif ($main == 5)   { $main = "couleur" }
  elsif ($main == 6)   { $main = "quinte" }
  elsif ($main == 7)   { $main = "carre" }
  elsif ($main == 8)   { $main = "quinte_flush" }
  elsif ($main == 9)   { $main = "quinte_royale" }

  return $main;
}